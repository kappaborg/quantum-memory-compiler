name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web_dashboard/quantum-dashboard/package-lock.json

    - name: Install dependencies
      run: |
        cd web_dashboard/quantum-dashboard
        npm ci

    - name: Build application
      env:
        # GitHub Pages Configuration
        REACT_APP_GITHUB_PAGES: true
        PUBLIC_URL: /quantum-memory-compiler
        
        # API Configuration (Demo Mode for GitHub Pages)
        REACT_APP_API_URL: demo://api.quantum-memory-compiler.local
        REACT_APP_DEMO_MODE: true
        REACT_APP_ENV: production
        
        # IBM Quantum Configuration (from secrets)
        REACT_APP_IBM_QUANTUM_TOKEN: ${{ secrets.IBM_QUANTUM_TOKEN }}
        REACT_APP_IBM_QUANTUM_INSTANCE: ibm_quantum
        REACT_APP_IBM_QUANTUM_CHANNEL: ibm_quantum
        
        # Build Configuration
        NODE_ENV: production
        GENERATE_SOURCEMAP: false
        
      run: |
        cd web_dashboard/quantum-dashboard
        npm run build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./web_dashboard/quantum-dashboard/build
        cname: quantum-memory-compiler.github.io

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 